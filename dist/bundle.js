!function(e){var t={};function r(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)r.d(i,n,function(t){return e[t]}.bind(null,n));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e,t,r){},function(e,t,r){"use strict";r.r(t);let i=[{id:1,title:"Learn JS",description:"Learn JS",priority:"high",status:"open"},{id:2,title:"Improve English",description:"Improve English",priority:"low",status:"done"},{id:3,title:"Travel a lot",description:"Travel a lot",priority:"normal",status:"open"},{id:4,title:"Travel a little",description:"Travel a little",priority:"high",status:"done"}];class n{constructor(e){this.list=e,this.todos=e.querySelector(".todos"),this.createBtn=e.querySelector(".create-btn"),this.createBtn.addEventListener("click",()=>this.addItem()),this.filters=[...e.querySelectorAll(".select")],this.filters.forEach(e=>e.addEventListener("change",e=>this.filterItems(e))),this.search=e.querySelector(".search"),this.search.addEventListener("change",e=>this.searchItems(e)),this.filteredBy={priority:"all",status:"all"},this.searchedBy="",this.init()}init(){i.forEach(e=>{this.renderItem(e)})}renderItem(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i[0];const t=document.createElement("div");this.todos.append(t),t.classList.add("todo");let r="Done";"done"===e.status&&(t.classList.add("done"),r="Undone"),t.dataset.id=e.id,t.innerHTML="\n      <div class='todo__title'>".concat(e.title,"</div>\n      <div class='todo__description'>").concat(e.description,"</div>\n      <div class='todo__priority'>").concat(e.priority,"</div>\n      <div class='todo__btn btn'>...</div>\n      <ul class=\"todo__btns\">\n        <li class='done-btn'>").concat(r,"</li>\n        <li class='edit-btn'>Edit</li>\n        <li class='delete-btn'>Delete</li>\n      </ul>"),t.querySelector(".todo__btn").addEventListener("click",()=>t.querySelector(".todo__btns").classList.toggle("active")),t.querySelector(".delete-btn").addEventListener("click",()=>this.deleteItem(e.id)),t.querySelector(".done-btn").addEventListener("click",()=>this.changeStatus(e.id)),t.querySelector(".edit-btn").addEventListener("click",()=>this.editItem(e.id))}addItem(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:i[0];this.renderItem(e),i.push(e)}deleteItem(e){i=i.filter(t=>t.id!==e),[...this.todos.querySelectorAll(".todo")].find(t=>Number(t.dataset.id)===e).remove()}changeStatus(e){const t=i.find(t=>t.id===Number(e)),r=t.status;i.find(t=>t.id===Number(e)).status="done"===r?"open":"done";const n=[...this.todos.querySelectorAll(".todo")].find(t=>Number(t.dataset.id)===e);n.classList.toggle("done"),n.querySelector(".done-btn").innerHTML="done"===t.status?"Undone":"Done",this.todos.innerHTML="",this.filteredArray().forEach(e=>{this.renderItem(e)})}filteredArray(){return i.filter(e=>{let t=!0;return Object.entries(this.filteredBy).forEach(r=>{"all"!==r[1]&&e[r[0]]!==r[1]&&(t=!1)}),t}).filter(e=>{const t=e.title.toLowerCase(),r=e.description.toLowerCase();return t.includes(this.searchedBy)||r.includes(this.searchedBy)})}filterItems(e){this.todos.innerHTML="",this.filteredBy[e.target.name]=e.target.value,this.filteredArray().forEach(e=>{this.renderItem(e)})}searchItems(e){this.todos.innerHTML="",this.searchedBy=e.target.value,this.filteredArray().forEach(e=>{this.renderItem(e)})}}document.addEventListener("DOMContentLoaded",()=>{[...document.querySelectorAll(".todo-list")].forEach(e=>new n(e))});r(0)}]);
//# sourceMappingURL=bundle.js.map